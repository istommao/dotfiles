# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="custom"
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# zsh-completions
fpath=(/usr/local/share/zsh-completions $fpath)

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git cp docker extract git-extract autojump brew osx zsh-syntax-highlighting autopep8 autoenv)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
export PATH=$HOME/.dotfiles/bin:$HOME/.rvm/bin:node_modules/.bin:$HOME/bin:/usr/local/bin:$PATH:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Customize alias
alias vi="vim"

alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'

#alias fab='fab -f ~/fabfile.py'
alias subl='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'
alias code='/Applications/Visual\ Studio\ Code.app/Contents/MacOS/Electron'
alias grep="grep --color=auto"
alias mocha='mocha -R spec'
alias pgstart="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"
alias pgstop="pg_ctl -D /usr/local/var/postgres stop -s -m fast"
alias vpn_start="export http_proxy='http://127.0.0.1:8118'; export https_proxy='http://127.0.0.1:8118'"
alias git_set_proxy="git config --global http.proxy http://127.0.0.1:8118; git config --global https.proxy http://127.0.0.1:8118"
alias git_unset_proxy="git config --global  --unset http.proxy; git config --global --unset https.proxy "
alias charles_proxy="export http_proxy='http://127.0.0.1:8888'; export https_proxy='http://127.0.0.1:8888'"
alias hidefile="defaults write com.apple.finder AppleShowAllFiles No && killall Finder"
alias showfile="defaults write com.apple.finder AppleShowAllFiles Yes && killall Finder"
alias cnpm="npm --registry=https://registry.npm.taobao.org \
    --cache=$HOME/.npm/.cache/cnpm \
    --disturl=https://npm.taobao.org/dist \
    --userconfig=$HOME/.cnpmrc"
alias cppcompile='c++ -std=c++11 -stdlib=libc++'
alias gfb='git fetch && git rebase -i origin/develop'
alias ufab="fab -f ~/Documents/Source/Abstack/fabfile/fabfile"
alias http_track="export http_proxy=http://127.0.0.1:9396"

alias pip_upgrade="pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U"
alias hmcl='cd ~/Game/hmcl && java -jar HMCL-2.2.8.jar'
alias rm='trash'
alias angrok='~/bin/angrok --config ~/bin/angrok.cfg'

# git
alias gg="git fetch upstream ; git merge upstream/\`git rev-parse --abbrev-ref HEAD\`"
alias ggg="git co develop; gg;"

# docker
alias dj='docker-compose run --rm server'
alias djs='docker-compose run --rm --service-ports server'
alias djt='docker-compose run --rm server coverage run --source=. ./manage.py test -k && docker-compose run --rm server coverage report' 
alias djh='docker-compose run --rm server coverage html' 

# function
# function acm {gcc -o run "$1" && cat input | ./run}

# loading virtualenvwrapper
source /usr/local/bin/virtualenvwrapper.sh
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python

# cheat setting
export EDITOR=/usr/local/bin/vim
export CHEATCOLOR=true

# autoenv
[ -f .env ] && source .env

# go
export GOPATH=~/Documents/Practice/go

# fortune
echo
echo "=============== Quote Of The Day ==============="
echo
fortune
echo
echo "================================================"
echo

# Setup zsh-autosuggestions
source ~/.dotfiles/lib/zsh-autosuggestions/zsh-autosuggestions.zsh

# cheat
export DEFAULT_CHEAT_DIR="$HOME/.dotfiles/cheat"
export CHEATCOLORS=true

# the fuck
eval "$(thefuck --alias)"

# pyenv
eval "$(pyenv init -)"
export PYENV_ROOT=/usr/local/var/pyenv

# nvm
export NVM_DIR=~/.nvm
. $(brew --prefix nvm)/nvm.sh

# CMAKE
export CMAKE_PREFIX_PATH=/usr/local/Cellar/qt5/5.5.1_2/lib/cmake:$CMAKE_PREFIX_PATH

# auto start vpn
vpn_start

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
